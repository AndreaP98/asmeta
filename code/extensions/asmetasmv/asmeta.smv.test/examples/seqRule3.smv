--file examples\seqRule3.smv
-- options: flatten? false
MODULE main
	VAR
		fooA: {-2147483647, 1, 2, 3, 4}; --controlled
		fooB: {-2147483647, 1, 2, 3, 4}; --controlled
		fooC: {-2147483647, 1, 2, 3, 4}; --controlled
		fooD: {-2147483647, 1, 2, 3, 4}; --controlled
		fooE: {-2147483647, 1, 2, 3, 4}; --controlled
		fooF: {-2147483647, 1, 2, 3, 4}; --controlled
		mon: boolean; --monitored
	ASSIGN
		init(fooA) := 1;
		init(fooB) := 1;
		init(fooC) := 2;
		init(fooD) := 2;
		init(fooE) := 2;
		init(fooF) := 2;
		next(fooA) :=
			case
				(mon) & 3 in {-2147483647, 1, 2, 3, 4}: 3;
				TRUE: fooA;
			esac;
		next(fooB) :=
			case
				(mon) & fooA in {-2147483647, 1, 2, 3, 4}: fooA;
				TRUE: fooB;
			esac;
		next(fooC) :=
			case
				(mon) & ((fooD + 1) + 1) in {-2147483647, 1, 2, 3, 4}: ((fooD + 1) + 1);
				TRUE: fooC;
			esac;
		next(fooD) :=
			case
				(mon) & 1 in {-2147483647, 1, 2, 3, 4}: 1;
				TRUE: fooD;
			esac;
		next(fooE) :=
			case
				(mon) & ((fooF + 1) + 1) in {-2147483647, 1, 2, 3, 4}: ((fooF + 1) + 1);
				TRUE: fooE;
			esac;
		next(fooF) :=
			case
				(mon) & 1 in {-2147483647, 1, 2, 3, 4}: 1;
				TRUE: fooF;
			esac;
--CTL properties
CTLSPEC NAME ctl0 := ((mon -> AX(AG((fooA = 3)))) & (fooA = 1));
CTLSPEC NAME ctl1 := AG((mon -> AX(AG((fooA = 3)))));
CTLSPEC NAME ctl2 := AG((mon -> AX(AG((fooA = 3)))));
CTLSPEC NAME ctl3 := (mon -> AX(((fooC = 4) & AG((mon -> AX((fooC = 3)))))));
CTLSPEC NAME ctl4 := (mon -> AX(((fooE = 4) & AG((mon -> AX((fooE = 3)))))));
CTLSPEC NAME ctl5 := E[(fooE = 2) U EX((fooE = 4))];
