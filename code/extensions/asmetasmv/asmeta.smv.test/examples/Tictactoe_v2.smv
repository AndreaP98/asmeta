--file examples\Tictactoe_v2.smv
MODULE main
	VAR
		board_1_1: {CROSS, EMPTY, NOUGHT, SIGN_UNDEF}; --controlled
		board_1_2: {CROSS, EMPTY, NOUGHT, SIGN_UNDEF}; --controlled
		board_1_3: {CROSS, EMPTY, NOUGHT, SIGN_UNDEF}; --controlled
		board_2_1: {CROSS, EMPTY, NOUGHT, SIGN_UNDEF}; --controlled
		board_2_2: {CROSS, EMPTY, NOUGHT, SIGN_UNDEF}; --controlled
		board_2_3: {CROSS, EMPTY, NOUGHT, SIGN_UNDEF}; --controlled
		board_3_1: {CROSS, EMPTY, NOUGHT, SIGN_UNDEF}; --controlled
		board_3_2: {CROSS, EMPTY, NOUGHT, SIGN_UNDEF}; --controlled
		board_3_3: {CROSS, EMPTY, NOUGHT, SIGN_UNDEF}; --controlled
		status: {CHECK_PC, CHECK_USER, GAMEOVER, STATUS_UNDEF, TURN_PC, TURN_USER}; --controlled
		userChoiceX: 1..3; --monitored
		userChoiceY: 1..3; --monitored
		winner: {PC, PLAYER, RESULTDOMAIN_UNDEF, RUN, TIE}; --controlled
		--declaration of choose variables
		var_$x_0: 1..3;
		var_$y_0: 1..3;
	DEFINE
	CONSTANTS STATUS_UNDEF, CHECK_PC, CHECK_USER, GAMEOVER, TURN_PC, TURN_USER, RESULTDOMAIN_UNDEF, PC, PLAYER, RUN, TIE, SIGN_UNDEF, CROSS, EMPTY, NOUGHT;
	ASSIGN
		init(board_1_1) := EMPTY;
		init(board_1_2) := EMPTY;
		init(board_1_3) := EMPTY;
		init(board_2_1) := EMPTY;
		init(board_2_2) := EMPTY;
		init(board_2_3) := EMPTY;
		init(board_3_1) := EMPTY;
		init(board_3_2) := EMPTY;
		init(board_3_3) := EMPTY;
		init(status) := TURN_USER;
		init(winner) := RUN;
		next(board_1_1) :=
			case
				((board_1_1 = EMPTY) & (status = TURN_PC) & (var_$x_0 = 1) & (var_$y_0 = 1)): NOUGHT;
				((status = TURN_USER) & (((1 = userChoiceY) & (1 = userChoiceX)) & (board_1_1 = EMPTY))): CROSS;
				TRUE: board_1_1;
			esac;
		next(board_1_2) :=
			case
				((((1 = userChoiceX) & (2 = userChoiceY)) & (board_1_2 = EMPTY)) & (status = TURN_USER)): CROSS;
				((status = TURN_PC) & (board_1_2 = EMPTY) & (var_$y_0 = 2) & (var_$x_0 = 1)): NOUGHT;
				TRUE: board_1_2;
			esac;
		next(board_1_3) :=
			case
				((status = TURN_USER) & ((board_1_3 = EMPTY) & ((1 = userChoiceX) & (3 = userChoiceY)))): CROSS;
				((board_1_3 = EMPTY) & (var_$y_0 = 3) & (status = TURN_PC) & (var_$x_0 = 1)): NOUGHT;
				TRUE: board_1_3;
			esac;
		next(board_2_1) :=
			case
				((board_2_1 = EMPTY) & (status = TURN_PC) & (var_$x_0 = 2) & (var_$y_0 = 1)): NOUGHT;
				((status = TURN_USER) & (((2 = userChoiceX) & (1 = userChoiceY)) & (board_2_1 = EMPTY))): CROSS;
				TRUE: board_2_1;
			esac;
		next(board_2_2) :=
			case
				((board_2_2 = EMPTY) & (status = TURN_PC) & (var_$x_0 = 2) & (var_$y_0 = 2)): NOUGHT;
				((status = TURN_USER) & (((2 = userChoiceX) & (2 = userChoiceY)) & (board_2_2 = EMPTY))): CROSS;
				TRUE: board_2_2;
			esac;
		next(board_2_3) :=
			case
				((status = TURN_USER) & (((2 = userChoiceX) & (3 = userChoiceY)) & (board_2_3 = EMPTY))): CROSS;
				((board_2_3 = EMPTY) & (var_$y_0 = 3) & (status = TURN_PC) & (var_$x_0 = 2)): NOUGHT;
				TRUE: board_2_3;
			esac;
		next(board_3_1) :=
			case
				((board_3_1 = EMPTY) & (status = TURN_PC) & (var_$x_0 = 3) & (var_$y_0 = 1)): NOUGHT;
				((status = TURN_USER) & ((board_3_1 = EMPTY) & ((3 = userChoiceX) & (1 = userChoiceY)))): CROSS;
				TRUE: board_3_1;
			esac;
		next(board_3_2) :=
			case
				((((3 = userChoiceX) & (2 = userChoiceY)) & (board_3_2 = EMPTY)) & (status = TURN_USER)): CROSS;
				((status = TURN_PC) & (var_$x_0 = 3) & (var_$y_0 = 2) & (board_3_2 = EMPTY)): NOUGHT;
				TRUE: board_3_2;
			esac;
		next(board_3_3) :=
			case
				((board_3_3 = EMPTY) & (var_$y_0 = 3) & (status = TURN_PC) & (var_$x_0 = 3)): NOUGHT;
				((status = TURN_USER) & ((board_3_3 = EMPTY) & ((3 = userChoiceX) & (3 = userChoiceY)))): CROSS;
				TRUE: board_3_3;
			esac;
		next(status) :=
			case
				(((board_3_3 = EMPTY) & (var_$y_0 = 3) & (status = TURN_PC) & (var_$x_0 = 3)) | (((((((((board_1_1 = EMPTY) & (status = TURN_PC) & (var_$x_0 = 1) & (var_$y_0 = 1)) | ((status = TURN_PC) & (board_1_2 = EMPTY) & (var_$y_0 = 2) & (var_$x_0 = 1))) | ((board_1_3 = EMPTY) & (var_$y_0 = 3) & (status = TURN_PC) & (var_$x_0 = 1))) | ((board_2_1 = EMPTY) & (status = TURN_PC) & (var_$x_0 = 2) & (var_$y_0 = 1))) | ((board_2_2 = EMPTY) & (status = TURN_PC) & (var_$x_0 = 2) & (var_$y_0 = 2))) | ((board_2_3 = EMPTY) & (var_$y_0 = 3) & (status = TURN_PC) & (var_$x_0 = 2))) | ((board_3_1 = EMPTY) & (status = TURN_PC) & (var_$x_0 = 3) & (var_$y_0 = 1))) | ((status = TURN_PC) & (var_$x_0 = 3) & (var_$y_0 = 2) & (board_3_2 = EMPTY)))): CHECK_PC;
				(((status = TURN_USER) & ((board_3_3 = EMPTY) & ((3 = userChoiceX) & (3 = userChoiceY)))) | (((((3 = userChoiceX) & (2 = userChoiceY)) & (board_3_2 = EMPTY)) & (status = TURN_USER)) | (((((((status = TURN_USER) & ((board_1_3 = EMPTY) & ((1 = userChoiceX) & (3 = userChoiceY)))) | (((((1 = userChoiceX) & (2 = userChoiceY)) & (board_1_2 = EMPTY)) & (status = TURN_USER)) | ((status = TURN_USER) & (((1 = userChoiceY) & (1 = userChoiceX)) & (board_1_1 = EMPTY))))) | ((status = TURN_USER) & (((2 = userChoiceX) & (1 = userChoiceY)) & (board_2_1 = EMPTY)))) | ((status = TURN_USER) & (((2 = userChoiceX) & (2 = userChoiceY)) & (board_2_2 = EMPTY)))) | ((status = TURN_USER) & (((2 = userChoiceX) & (3 = userChoiceY)) & (board_2_3 = EMPTY)))) | ((status = TURN_USER) & ((board_3_1 = EMPTY) & ((3 = userChoiceX) & (1 = userChoiceY))))))): CHECK_USER;
				((((!((((board_2_2 = CROSS) & (board_1_3 = CROSS)) & (board_3_1 = CROSS)) | ((((board_2_2 = CROSS) & (board_1_1 = CROSS)) & (board_3_3 = CROSS)) | ((((((board_1_1 = CROSS) & (board_2_1 = CROSS)) & (board_3_1 = CROSS)) | ((((board_3_2 = CROSS) & (board_3_1 = CROSS)) & (board_3_3 = CROSS)) | ((((board_1_2 = CROSS) & (board_1_1 = CROSS)) & (board_1_3 = CROSS)) | (((board_2_2 = CROSS) & (board_2_1 = CROSS)) & (board_2_3 = CROSS))))) | ((board_3_2 = CROSS) & ((board_1_2 = CROSS) & (board_2_2 = CROSS)))) | (((board_1_3 = CROSS) & (board_2_3 = CROSS)) & (board_3_3 = CROSS))))) & !((board_1_3 = EMPTY) | (board_2_3 = EMPTY) | (board_3_1 = EMPTY) | (board_3_3 = EMPTY) | (board_2_1 = EMPTY) | (board_2_2 = EMPTY) | (board_1_1 = EMPTY) | (board_1_2 = EMPTY) | (board_3_2 = EMPTY)) & (status = CHECK_USER)) | (((((board_2_2 = CROSS) & (board_1_3 = CROSS)) & (board_3_1 = CROSS)) | ((((board_2_2 = CROSS) & (board_1_1 = CROSS)) & (board_3_3 = CROSS)) | ((((((board_1_1 = CROSS) & (board_2_1 = CROSS)) & (board_3_1 = CROSS)) | ((((board_3_2 = CROSS) & (board_3_1 = CROSS)) & (board_3_3 = CROSS)) | ((((board_1_2 = CROSS) & (board_1_1 = CROSS)) & (board_1_3 = CROSS)) | (((board_2_2 = CROSS) & (board_2_1 = CROSS)) & (board_2_3 = CROSS))))) | ((board_3_2 = CROSS) & ((board_1_2 = CROSS) & (board_2_2 = CROSS)))) | (((board_1_3 = CROSS) & (board_2_3 = CROSS)) & (board_3_3 = CROSS))))) & (status = CHECK_USER))) | (((((((((board_3_3 = NOUGHT) & ((board_3_1 = NOUGHT) & (board_3_2 = NOUGHT))) | (((board_1_3 = NOUGHT) & ((board_1_2 = NOUGHT) & (board_1_1 = NOUGHT))) | (((board_2_1 = NOUGHT) & (board_2_2 = NOUGHT)) & (board_2_3 = NOUGHT)))) | ((board_3_1 = NOUGHT) & ((board_2_1 = NOUGHT) & (board_1_1 = NOUGHT)))) | (((board_1_2 = NOUGHT) & (board_2_2 = NOUGHT)) & (board_3_2 = NOUGHT))) | (((board_1_3 = NOUGHT) & (board_2_3 = NOUGHT)) & (board_3_3 = NOUGHT))) | (((board_2_2 = NOUGHT) & (board_1_1 = NOUGHT)) & (board_3_3 = NOUGHT))) | ((board_3_1 = NOUGHT) & ((board_1_3 = NOUGHT) & (board_2_2 = NOUGHT)))) & (status = CHECK_PC))) | (!((board_1_3 = EMPTY) | (board_2_3 = EMPTY) | (board_3_1 = EMPTY) | (board_3_3 = EMPTY) | (board_2_1 = EMPTY) | (board_2_2 = EMPTY) | (board_1_1 = EMPTY) | (board_1_2 = EMPTY) | (board_3_2 = EMPTY)) & !((((((((board_3_3 = NOUGHT) & ((board_3_1 = NOUGHT) & (board_3_2 = NOUGHT))) | (((board_1_3 = NOUGHT) & ((board_1_2 = NOUGHT) & (board_1_1 = NOUGHT))) | (((board_2_1 = NOUGHT) & (board_2_2 = NOUGHT)) & (board_2_3 = NOUGHT)))) | ((board_3_1 = NOUGHT) & ((board_2_1 = NOUGHT) & (board_1_1 = NOUGHT)))) | (((board_1_2 = NOUGHT) & (board_2_2 = NOUGHT)) & (board_3_2 = NOUGHT))) | (((board_1_3 = NOUGHT) & (board_2_3 = NOUGHT)) & (board_3_3 = NOUGHT))) | (((board_2_2 = NOUGHT) & (board_1_1 = NOUGHT)) & (board_3_3 = NOUGHT))) | ((board_3_1 = NOUGHT) & ((board_1_3 = NOUGHT) & (board_2_2 = NOUGHT)))) & (status = CHECK_PC))): GAMEOVER;
				((board_1_3 = EMPTY) | (board_2_3 = EMPTY) | (board_3_1 = EMPTY) | (board_3_3 = EMPTY) | (board_2_1 = EMPTY) | (board_2_2 = EMPTY) | (board_1_1 = EMPTY) | (board_1_2 = EMPTY) | (board_3_2 = EMPTY) & !((((((((board_3_3 = NOUGHT) & ((board_3_1 = NOUGHT) & (board_3_2 = NOUGHT))) | (((board_1_3 = NOUGHT) & ((board_1_2 = NOUGHT) & (board_1_1 = NOUGHT))) | (((board_2_1 = NOUGHT) & (board_2_2 = NOUGHT)) & (board_2_3 = NOUGHT)))) | ((board_3_1 = NOUGHT) & ((board_2_1 = NOUGHT) & (board_1_1 = NOUGHT)))) | (((board_1_2 = NOUGHT) & (board_2_2 = NOUGHT)) & (board_3_2 = NOUGHT))) | (((board_1_3 = NOUGHT) & (board_2_3 = NOUGHT)) & (board_3_3 = NOUGHT))) | (((board_2_2 = NOUGHT) & (board_1_1 = NOUGHT)) & (board_3_3 = NOUGHT))) | ((board_3_1 = NOUGHT) & ((board_1_3 = NOUGHT) & (board_2_2 = NOUGHT)))) & (status = CHECK_PC)): TURN_USER;
				(!((((board_2_2 = CROSS) & (board_1_3 = CROSS)) & (board_3_1 = CROSS)) | ((((board_2_2 = CROSS) & (board_1_1 = CROSS)) & (board_3_3 = CROSS)) | ((((((board_1_1 = CROSS) & (board_2_1 = CROSS)) & (board_3_1 = CROSS)) | ((((board_3_2 = CROSS) & (board_3_1 = CROSS)) & (board_3_3 = CROSS)) | ((((board_1_2 = CROSS) & (board_1_1 = CROSS)) & (board_1_3 = CROSS)) | (((board_2_2 = CROSS) & (board_2_1 = CROSS)) & (board_2_3 = CROSS))))) | ((board_3_2 = CROSS) & ((board_1_2 = CROSS) & (board_2_2 = CROSS)))) | (((board_1_3 = CROSS) & (board_2_3 = CROSS)) & (board_3_3 = CROSS))))) & (board_1_3 = EMPTY) | (board_2_3 = EMPTY) | (board_3_1 = EMPTY) | (board_3_3 = EMPTY) | (board_2_1 = EMPTY) | (board_2_2 = EMPTY) | (board_1_1 = EMPTY) | (board_1_2 = EMPTY) | (board_3_2 = EMPTY) & (status = CHECK_USER)): TURN_PC;
				TRUE: status;
			esac;
		next(winner) :=
			case
				(((((((((board_3_3 = NOUGHT) & ((board_3_1 = NOUGHT) & (board_3_2 = NOUGHT))) | (((board_1_3 = NOUGHT) & ((board_1_2 = NOUGHT) & (board_1_1 = NOUGHT))) | (((board_2_1 = NOUGHT) & (board_2_2 = NOUGHT)) & (board_2_3 = NOUGHT)))) | ((board_3_1 = NOUGHT) & ((board_2_1 = NOUGHT) & (board_1_1 = NOUGHT)))) | (((board_1_2 = NOUGHT) & (board_2_2 = NOUGHT)) & (board_3_2 = NOUGHT))) | (((board_1_3 = NOUGHT) & (board_2_3 = NOUGHT)) & (board_3_3 = NOUGHT))) | (((board_2_2 = NOUGHT) & (board_1_1 = NOUGHT)) & (board_3_3 = NOUGHT))) | ((board_3_1 = NOUGHT) & ((board_1_3 = NOUGHT) & (board_2_2 = NOUGHT)))) & (status = CHECK_PC)): PC;
				(((((board_2_2 = CROSS) & (board_1_3 = CROSS)) & (board_3_1 = CROSS)) | ((((board_2_2 = CROSS) & (board_1_1 = CROSS)) & (board_3_3 = CROSS)) | ((((((board_1_1 = CROSS) & (board_2_1 = CROSS)) & (board_3_1 = CROSS)) | ((((board_3_2 = CROSS) & (board_3_1 = CROSS)) & (board_3_3 = CROSS)) | ((((board_1_2 = CROSS) & (board_1_1 = CROSS)) & (board_1_3 = CROSS)) | (((board_2_2 = CROSS) & (board_2_1 = CROSS)) & (board_2_3 = CROSS))))) | ((board_3_2 = CROSS) & ((board_1_2 = CROSS) & (board_2_2 = CROSS)))) | (((board_1_3 = CROSS) & (board_2_3 = CROSS)) & (board_3_3 = CROSS))))) & (status = CHECK_USER)): PLAYER;
				((!((((board_2_2 = CROSS) & (board_1_3 = CROSS)) & (board_3_1 = CROSS)) | ((((board_2_2 = CROSS) & (board_1_1 = CROSS)) & (board_3_3 = CROSS)) | ((((((board_1_1 = CROSS) & (board_2_1 = CROSS)) & (board_3_1 = CROSS)) | ((((board_3_2 = CROSS) & (board_3_1 = CROSS)) & (board_3_3 = CROSS)) | ((((board_1_2 = CROSS) & (board_1_1 = CROSS)) & (board_1_3 = CROSS)) | (((board_2_2 = CROSS) & (board_2_1 = CROSS)) & (board_2_3 = CROSS))))) | ((board_3_2 = CROSS) & ((board_1_2 = CROSS) & (board_2_2 = CROSS)))) | (((board_1_3 = CROSS) & (board_2_3 = CROSS)) & (board_3_3 = CROSS))))) & !((board_1_3 = EMPTY) | (board_2_3 = EMPTY) | (board_3_1 = EMPTY) | (board_3_3 = EMPTY) | (board_2_1 = EMPTY) | (board_2_2 = EMPTY) | (board_1_1 = EMPTY) | (board_1_2 = EMPTY) | (board_3_2 = EMPTY)) & (status = CHECK_USER)) | (!((board_1_3 = EMPTY) | (board_2_3 = EMPTY) | (board_3_1 = EMPTY) | (board_3_3 = EMPTY) | (board_2_1 = EMPTY) | (board_2_2 = EMPTY) | (board_1_1 = EMPTY) | (board_1_2 = EMPTY) | (board_3_2 = EMPTY)) & !((((((((board_3_3 = NOUGHT) & ((board_3_1 = NOUGHT) & (board_3_2 = NOUGHT))) | (((board_1_3 = NOUGHT) & ((board_1_2 = NOUGHT) & (board_1_1 = NOUGHT))) | (((board_2_1 = NOUGHT) & (board_2_2 = NOUGHT)) & (board_2_3 = NOUGHT)))) | ((board_3_1 = NOUGHT) & ((board_2_1 = NOUGHT) & (board_1_1 = NOUGHT)))) | (((board_1_2 = NOUGHT) & (board_2_2 = NOUGHT)) & (board_3_2 = NOUGHT))) | (((board_1_3 = NOUGHT) & (board_2_3 = NOUGHT)) & (board_3_3 = NOUGHT))) | (((board_2_2 = NOUGHT) & (board_1_1 = NOUGHT)) & (board_3_3 = NOUGHT))) | ((board_3_1 = NOUGHT) & ((board_1_3 = NOUGHT) & (board_2_2 = NOUGHT)))) & (status = CHECK_PC))): TIE;
				TRUE: winner;
			esac;
	INVAR	(((board_1_2 = EMPTY) & (var_$y_0 = 2) & (var_$x_0 = 1)) | ((board_3_1 = EMPTY) & (var_$x_0 = 3) & (var_$y_0 = 1)) | (!(board_2_3 = EMPTY) & !(board_3_3 = EMPTY) & !(board_2_2 = EMPTY) & !(board_1_2 = EMPTY) & !(board_3_2 = EMPTY) & !(board_1_3 = EMPTY) & !(board_3_1 = EMPTY) & !(board_2_1 = EMPTY) & !(board_1_1 = EMPTY)) | ((board_1_3 = EMPTY) & (var_$y_0 = 3) & (var_$x_0 = 1)) | ((board_2_3 = EMPTY) & (var_$y_0 = 3) & (var_$x_0 = 2)) | ((board_1_1 = EMPTY) & (var_$x_0 = 1) & (var_$y_0 = 1)) | ((var_$x_0 = 3) & (var_$y_0 = 2) & (board_3_2 = EMPTY)) | ((board_2_1 = EMPTY) & (var_$x_0 = 2) & (var_$y_0 = 1)) | ((board_3_3 = EMPTY) & (var_$y_0 = 3) & (var_$x_0 = 3)) | ((board_2_2 = EMPTY) & (var_$x_0 = 2) & (var_$y_0 = 2)));
--CTL properties
CTLSPEC NAME ctl0 := EF(!((board_1_3 = EMPTY) | (board_2_3 = EMPTY) | (board_3_1 = EMPTY) | (board_3_3 = EMPTY) | (board_2_1 = EMPTY) | (board_2_2 = EMPTY) | (board_1_1 = EMPTY) | (board_1_2 = EMPTY) | (board_3_2 = EMPTY)));
CTLSPEC NAME ctl1 := AG((!((board_1_3 = EMPTY) | (board_2_3 = EMPTY) | (board_3_1 = EMPTY) | (board_3_3 = EMPTY) | (board_2_1 = EMPTY) | (board_2_2 = EMPTY) | (board_1_1 = EMPTY) | (board_1_2 = EMPTY) | (board_3_2 = EMPTY)) -> AG(!((board_1_3 = EMPTY) | (board_2_3 = EMPTY) | (board_3_1 = EMPTY) | (board_3_3 = EMPTY) | (board_2_1 = EMPTY) | (board_2_2 = EMPTY) | (board_1_1 = EMPTY) | (board_1_2 = EMPTY) | (board_3_2 = EMPTY)))));
CTLSPEC NAME ctl2 := EF((winner = PC));
CTLSPEC NAME ctl3 := EF((winner = PLAYER));
CTLSPEC NAME ctl4 := EF((winner = TIE));
CTLSPEC NAME ctl5 := AG(((winner = TIE) -> !((board_1_3 = EMPTY) | (board_2_3 = EMPTY) | (board_3_1 = EMPTY) | (board_3_3 = EMPTY) | (board_2_1 = EMPTY) | (board_2_2 = EMPTY) | (board_1_1 = EMPTY) | (board_1_2 = EMPTY) | (board_3_2 = EMPTY))));
CTLSPEC NAME ctl6 := AG((((((board_1_3 = board_2_2) & (board_1_3 != EMPTY)) & (board_2_2 = board_3_1)) | ((((board_3_2 = board_3_3) & ((board_3_1 != EMPTY) & (board_3_1 = board_3_2))) | ((((board_1_2 = board_1_3) & ((board_1_1 != EMPTY) & (board_1_1 = board_1_2))) | ((((board_1_2 = board_1_3) & ((board_1_1 != EMPTY) & (board_1_1 = board_1_2))) | ((board_2_2 = board_2_3) & ((board_2_1 != EMPTY) & (board_2_1 = board_2_2)))) | ((board_3_2 = board_3_3) & ((board_3_1 != EMPTY) & (board_3_1 = board_3_2))))) | ((board_2_2 = board_2_3) & ((board_2_1 != EMPTY) & (board_2_1 = board_2_2))))) | ((board_2_2 = board_3_3) & ((board_1_1 != EMPTY) & (board_1_1 = board_2_2))))) -> AX(AG((status = GAMEOVER)))));
--AsmetaL invariants
CTLSPEC	AG(((winner = TIE) -> !((board_1_3 = EMPTY) | (board_2_3 = EMPTY) | (board_3_1 = EMPTY) | (board_3_3 = EMPTY) | (board_2_1 = EMPTY) | (board_2_2 = EMPTY) | (board_1_1 = EMPTY) | (board_1_2 = EMPTY) | (board_3_2 = EMPTY))));
