--file examples\iff.smv
MODULE main
	VAR
		foo: boolean; --controlled
		fooA: boolean; --controlled
		fooB: boolean; --controlled
		fooC: boolean; --controlled
		fooD: boolean; --controlled
		fooE: boolean; --controlled
		fooF: boolean; --controlled
		fooG: boolean; --controlled
		fooH: boolean; --controlled
		monA: boolean; --monitored
		monB: boolean; --monitored
	DEFINE
	ASSIGN
		init(foo) := (monA <-> monB);
		init(fooA) := TRUE;
		init(fooB) := FALSE;
		init(fooC) := FALSE;
		init(fooD) := TRUE;
		init(fooE) := !(monA);
		init(fooF) := monB;
		init(fooG) := !(monB);
		init(fooH) := monA;
		next(foo) := (monA <-> monB);
		next(fooA) := TRUE;
		next(fooB) := FALSE;
		next(fooC) := FALSE;
		next(fooD) := TRUE;
		next(fooE) := !(monA);
		next(fooF) := monB;
		next(fooG) := !(monB);
		next(fooH) := monA;
--CTL properties
CTLSPEC NAME ctl0 := AG(TRUE);
CTLSPEC NAME ctl1 := AG(TRUE);
CTLSPEC NAME ctl2 := AG(TRUE);
CTLSPEC NAME ctl3 := AG(TRUE);
CTLSPEC NAME ctl4 := AG(((monA <-> monB) = ((monB | !(monA)) & (monA | !(monB)))));
CTLSPEC NAME ctl5 := AG(fooA);
CTLSPEC NAME ctl6 := AG(!(fooB));
CTLSPEC NAME ctl7 := AG(!(fooC));
CTLSPEC NAME ctl8 := AG(fooD);
CTLSPEC NAME ctl9 := AG(EF(fooE));
CTLSPEC NAME ctl10 := AG(EF(!(fooE)));
CTLSPEC NAME ctl11 := AG(EF(fooF));
CTLSPEC NAME ctl12 := AG(EF(!(fooF)));
CTLSPEC NAME ctl13 := AG(EF(fooG));
CTLSPEC NAME ctl14 := AG(EF(!(fooG)));
CTLSPEC NAME ctl15 := AG(EF(fooH));
CTLSPEC NAME ctl16 := AG(EF(!(fooH)));
CTLSPEC NAME ctl17 := AG(((monA = monB) <-> AX(foo)));
