--file examples\abs.smv
MODULE main
	VAR
		foo: {-1, -10, -2, -2147483647, -3, -4, -5, -6, -7, -8, -9, 0, 1, 10, 2, 3, 4, 5, 6, 7, 8, 9}; --controlled
		fooA: {-1, -10, -2, -2147483647, -3, -4, -5, -6, -7, -8, -9, 0, 1, 10, 2, 3, 4, 5, 6, 7, 8, 9}; --controlled
		fooB: {-1, -10, -2, -2147483647, -3, -4, -5, -6, -7, -8, -9, 0, 1, 10, 2, 3, 4, 5, 6, 7, 8, 9}; --controlled
		fooC: {-1, -10, -2, -2147483647, -3, -4, -5, -6, -7, -8, -9, 0, 1, 10, 2, 3, 4, 5, 6, 7, 8, 9}; --controlled
		fooD: {-1, -10, -2, -2147483647, -3, -4, -5, -6, -7, -8, -9, 0, 1, 10, 2, 3, 4, 5, 6, 7, 8, 9}; --controlled
		fooE: {-1, -10, -2, -2147483647, -3, -4, -5, -6, -7, -8, -9, 0, 1, 10, 2, 3, 4, 5, 6, 7, 8, 9}; --controlled
		fooF: {-1, -10, -2, -2147483647, -3, -4, -5, -6, -7, -8, -9, 0, 1, 10, 2, 3, 4, 5, 6, 7, 8, 9}; --controlled
		fooG: {-1, -10, -2, -2147483647, -3, -4, -5, -6, -7, -8, -9, 0, 1, 10, 2, 3, 4, 5, 6, 7, 8, 9}; --controlled
		fooH: {-1, -10, -2, -2147483647, -3, -4, -5, -6, -7, -8, -9, 0, 1, 10, 2, 3, 4, 5, 6, 7, 8, 9}; --controlled
		fooI: {-1, -10, -2, -2147483647, -3, -4, -5, -6, -7, -8, -9, 0, 1, 10, 2, 3, 4, 5, 6, 7, 8, 9}; --controlled
		fooL: {-1, -10, -2, -2147483647, -3, -4, -5, -6, -7, -8, -9, 0, 1, 10, 2, 3, 4, 5, 6, 7, 8, 9}; --controlled
		mon: -10..10; --monitored
		monA: -10..10; --monitored
		--declaration of choose variables
		var_$x_0: -10..10;
		var_$y_1: -10..10;
		var_$z_2: -10..10;
	ASSIGN
		init(foo) := 1;
		init(fooA) := 2;
		init(fooB) := 3;
		init(fooC) := 0;
		init(fooD) := 0;
		init(fooE) := 1;
		init(fooF) := 0;
		init(fooG) := 5;
		init(fooH) := 2;
		init(fooI) := 8;
		init(fooL) := (case ((mon / 2) + (case (monA / 2) >= 0: (monA / 2); TRUE: -(monA / 2); esac)) >= 0: ((mon / 2) + (case (monA / 2) >= 0: (monA / 2); TRUE: -(monA / 2); esac)); TRUE: -((mon / 2) + (case (monA / 2) >= 0: (monA / 2); TRUE: -(monA / 2); esac)); esac);
		next(foo) :=
			case
				(case mon >= 0: mon; TRUE: -(mon); esac) in {-1, -10, -2, -2147483647, -3, -4, -5, -6, -7, -8, -9, 0, 1, 10, 2, 3, 4, 5, 6, 7, 8, 9}: (case mon >= 0: mon; TRUE: -(mon); esac);
				TRUE: foo;
			esac;
		next(fooA) :=
			case
				((var_$x_0 = 10) | (var_$x_0 = -10)) & 10 in {-1, -10, -2, -2147483647, -3, -4, -5, -6, -7, -8, -9, 0, 1, 10, 2, 3, 4, 5, 6, 7, 8, 9}: 10;
				((var_$x_0 = 6) | (var_$x_0 = -6)) & 6 in {-1, -10, -2, -2147483647, -3, -4, -5, -6, -7, -8, -9, 0, 1, 10, 2, 3, 4, 5, 6, 7, 8, 9}: 6;
				((var_$x_0 = -9) | (var_$x_0 = 9)) & 9 in {-1, -10, -2, -2147483647, -3, -4, -5, -6, -7, -8, -9, 0, 1, 10, 2, 3, 4, 5, 6, 7, 8, 9}: 9;
				((var_$x_0 = -1) | (var_$x_0 = 1)) & 1 in {-1, -10, -2, -2147483647, -3, -4, -5, -6, -7, -8, -9, 0, 1, 10, 2, 3, 4, 5, 6, 7, 8, 9}: 1;
				((var_$x_0 = 8) | (var_$x_0 = -8)) & 8 in {-1, -10, -2, -2147483647, -3, -4, -5, -6, -7, -8, -9, 0, 1, 10, 2, 3, 4, 5, 6, 7, 8, 9}: 8;
				((var_$x_0 = 3) | (var_$x_0 = -3)) & 3 in {-1, -10, -2, -2147483647, -3, -4, -5, -6, -7, -8, -9, 0, 1, 10, 2, 3, 4, 5, 6, 7, 8, 9}: 3;
				((var_$x_0 = 2) | (var_$x_0 = -2)) & 2 in {-1, -10, -2, -2147483647, -3, -4, -5, -6, -7, -8, -9, 0, 1, 10, 2, 3, 4, 5, 6, 7, 8, 9}: 2;
				((var_$x_0 = 7) | (var_$x_0 = -7)) & 7 in {-1, -10, -2, -2147483647, -3, -4, -5, -6, -7, -8, -9, 0, 1, 10, 2, 3, 4, 5, 6, 7, 8, 9}: 7;
				((var_$x_0 = -5) | (var_$x_0 = 5)) & 5 in {-1, -10, -2, -2147483647, -3, -4, -5, -6, -7, -8, -9, 0, 1, 10, 2, 3, 4, 5, 6, 7, 8, 9}: 5;
				(var_$x_0 = 0) & 0 in {-1, -10, -2, -2147483647, -3, -4, -5, -6, -7, -8, -9, 0, 1, 10, 2, 3, 4, 5, 6, 7, 8, 9}: 0;
				((var_$x_0 = 4) | (var_$x_0 = -4)) & 4 in {-1, -10, -2, -2147483647, -3, -4, -5, -6, -7, -8, -9, 0, 1, 10, 2, 3, 4, 5, 6, 7, 8, 9}: 4;
				TRUE: fooA;
			esac;
		next(fooB) :=
			case
				(var_$y_1 = -4) & 4 in {-1, -10, -2, -2147483647, -3, -4, -5, -6, -7, -8, -9, 0, 1, 10, 2, 3, 4, 5, 6, 7, 8, 9}: 4;
				(var_$y_1 = -3) & 3 in {-1, -10, -2, -2147483647, -3, -4, -5, -6, -7, -8, -9, 0, 1, 10, 2, 3, 4, 5, 6, 7, 8, 9}: 3;
				(var_$y_1 = -6) & 6 in {-1, -10, -2, -2147483647, -3, -4, -5, -6, -7, -8, -9, 0, 1, 10, 2, 3, 4, 5, 6, 7, 8, 9}: 6;
				(var_$y_1 = -5) & 5 in {-1, -10, -2, -2147483647, -3, -4, -5, -6, -7, -8, -9, 0, 1, 10, 2, 3, 4, 5, 6, 7, 8, 9}: 5;
				(var_$y_1 = -8) & 8 in {-1, -10, -2, -2147483647, -3, -4, -5, -6, -7, -8, -9, 0, 1, 10, 2, 3, 4, 5, 6, 7, 8, 9}: 8;
				(var_$y_1 = -7) & 7 in {-1, -10, -2, -2147483647, -3, -4, -5, -6, -7, -8, -9, 0, 1, 10, 2, 3, 4, 5, 6, 7, 8, 9}: 7;
				(var_$y_1 = -9) & 9 in {-1, -10, -2, -2147483647, -3, -4, -5, -6, -7, -8, -9, 0, 1, 10, 2, 3, 4, 5, 6, 7, 8, 9}: 9;
				(var_$y_1 = -10) & 10 in {-1, -10, -2, -2147483647, -3, -4, -5, -6, -7, -8, -9, 0, 1, 10, 2, 3, 4, 5, 6, 7, 8, 9}: 10;
				(var_$y_1 = -2) & 2 in {-1, -10, -2, -2147483647, -3, -4, -5, -6, -7, -8, -9, 0, 1, 10, 2, 3, 4, 5, 6, 7, 8, 9}: 2;
				(var_$y_1 = -1) & 1 in {-1, -10, -2, -2147483647, -3, -4, -5, -6, -7, -8, -9, 0, 1, 10, 2, 3, 4, 5, 6, 7, 8, 9}: 1;
				TRUE: fooB;
			esac;
		next(fooC) :=
			case
				(var_$z_2 = 1) & 1 in {-1, -10, -2, -2147483647, -3, -4, -5, -6, -7, -8, -9, 0, 1, 10, 2, 3, 4, 5, 6, 7, 8, 9}: 1;
				TRUE: fooC;
			esac;
		next(fooD) :=
			case
				3 in {-1, -10, -2, -2147483647, -3, -4, -5, -6, -7, -8, -9, 0, 1, 10, 2, 3, 4, 5, 6, 7, 8, 9}: 3;
				TRUE: fooD;
			esac;
		next(fooE) :=
			case
				0 in {-1, -10, -2, -2147483647, -3, -4, -5, -6, -7, -8, -9, 0, 1, 10, 2, 3, 4, 5, 6, 7, 8, 9}: 0;
				TRUE: fooE;
			esac;
		next(fooF) :=
			case
				4 in {-1, -10, -2, -2147483647, -3, -4, -5, -6, -7, -8, -9, 0, 1, 10, 2, 3, 4, 5, 6, 7, 8, 9}: 4;
				TRUE: fooF;
			esac;
		next(fooG) :=
			case
				5 in {-1, -10, -2, -2147483647, -3, -4, -5, -6, -7, -8, -9, 0, 1, 10, 2, 3, 4, 5, 6, 7, 8, 9}: 5;
				TRUE: fooG;
			esac;
		next(fooH) :=
			case
				2 in {-1, -10, -2, -2147483647, -3, -4, -5, -6, -7, -8, -9, 0, 1, 10, 2, 3, 4, 5, 6, 7, 8, 9}: 2;
				TRUE: fooH;
			esac;
		next(fooI) :=
			case
				8 in {-1, -10, -2, -2147483647, -3, -4, -5, -6, -7, -8, -9, 0, 1, 10, 2, 3, 4, 5, 6, 7, 8, 9}: 8;
				TRUE: fooI;
			esac;
		next(fooL) :=
			case
				(case ((mon / 2) + (case (monA / 2) >= 0: (monA / 2); TRUE: -(monA / 2); esac)) >= 0: ((mon / 2) + (case (monA / 2) >= 0: (monA / 2); TRUE: -(monA / 2); esac)); TRUE: -((mon / 2) + (case (monA / 2) >= 0: (monA / 2); TRUE: -(monA / 2); esac)); esac) in {-1, -10, -2, -2147483647, -3, -4, -5, -6, -7, -8, -9, 0, 1, 10, 2, 3, 4, 5, 6, 7, 8, 9}: (case ((mon / 2) + (case (monA / 2) >= 0: (monA / 2); TRUE: -(monA / 2); esac)) >= 0: ((mon / 2) + (case (monA / 2) >= 0: (monA / 2); TRUE: -(monA / 2); esac)); TRUE: -((mon / 2) + (case (monA / 2) >= 0: (monA / 2); TRUE: -(monA / 2); esac)); esac);
				TRUE: fooL;
			esac;
	INVAR	((var_$x_0 = 10) | (var_$x_0 = -5) | (var_$x_0 = 6) | (var_$x_0 = -6) | (var_$x_0 = 7) | (var_$x_0 = -7) | (var_$x_0 = 4) | (var_$x_0 = -8) | (var_$x_0 = 5) | (var_$x_0 = -1) | (var_$x_0 = 2) | (var_$x_0 = -2) | (var_$x_0 = 3) | (var_$x_0 = -3) | (var_$x_0 = 0) | (var_$x_0 = -4) | (var_$x_0 = 1) | (var_$x_0 = -9) | (var_$x_0 = 8) | (var_$x_0 = 9) | (var_$x_0 = -10));
	INVAR	((var_$y_1 = -10) | (var_$y_1 = -4) | (var_$y_1 = -3) | (var_$y_1 = -6) | (var_$y_1 = -5) | (var_$y_1 = -8) | (var_$y_1 = -7) | (var_$y_1 = -9) | (var_$y_1 = -2) | (var_$y_1 = -1));
	INVAR	(var_$z_2 = 1);
--CTL properties
CTLSPEC NAME ctlSpec_f0 := AG((foo >= 0));
CTLSPEC NAME ctl1 := AG((fooA >= 0));
CTLSPEC NAME ctl2 := AG((fooB > 0));
CTLSPEC NAME ctl3 := ((fooC = 0) & AX(AG((fooC = 1))));
CTLSPEC NAME ctl4 := ((fooD = 0) & AX(AG((fooD = 3))));
CTLSPEC NAME ctl5 := ((fooE = 1) & AX(AG((fooE = 0))));
CTLSPEC NAME ctl6 := ((fooF = 0) & AX(AG((fooF = 4))));
CTLSPEC NAME ctl7 := AG(EF((mon >= 0)));
CTLSPEC NAME ctl8 := AG(EF((mon < 0)));
CTLSPEC NAME ctl9 := AG((fooG = 5));
CTLSPEC NAME ctl10 := AG((fooH = 2));
CTLSPEC NAME ctl11 := AG((fooI = 8));
