scenario keyOnChooseReqWithDiffIncoming
load ../CarSystem001main.asm
//preparo lo scenario-> accendo la macchina e seleziono sinistra>0.5 sec
check pitmanArmUpDown_RunnReq= NEUTRAL_UD;
check pitmanArmUpDown_Buff= NEUTRAL_UD;
check pitmanArmUpDown= NEUTRAL_UD;
set keyState := KEYINIGNITIONONPOSITION;
set pitmanArmUpDown:= UPWARD7;

step
check keyState=KEYINIGNITIONONPOSITION;
check pitmanArmUpDown_RunnReq= UPWARD7;
check blinkRight != 0 //controllo se è partito il lampeggiamento
	 blinkRightPulseRatio != NOPULSE;
set pitmanArmUpDown:= DOWNWARD5;

step
//la request corrente viene interrotta e quella arrivata messa nel buffer
check keyState=KEYINIGNITIONONPOSITION;
check pitmanArmUpDown_Buff= DOWNWARD5;
check pitmanArmUpDown_RunnReq= NEUTRAL_UD;
check blinkRight = 0
	 blinkRightPulseRatio = NOPULSE;
check blinkLeft = 0
	 blinkRightLeft = NOPULSE;
	 
step //mostriamo come il sistema sceglie di eseguire il buffer
check keyState=KEYINIGNITIONONPOSITION;
check pitmanArmUpDown_Buff= NEUTRAL_UD;
check pitmanArmUpDown_RunnReq= DOWNWARD5;
check blinkRight = 0
	 blinkRightPulseRatio = NOPULSE;
check blinkLeft != 0
	 blinkRightLeft != NOPULSE;
//nel prossimo step mostriamo come il sistema decide la request in arrivo sul buffer, cancellando quest'ultimo
set pitmanArmUpDown:= UPWARD7;

step
check keyState=KEYINIGNITIONONPOSITION;
check pitmanArmUpDown_Buff= UPWARD7;
check pitmanArmUpDown_RunnReq= NEUTRAL_UD;
check blinkRight = 0
	 blinkRightPulseRatio = NOPULSE;
check blinkLeft = 0
	 blinkRightLeft = NOPULSE;
//qui arriva la nuova richiesta che sovrascrive il buffer
set pitmanArmUpDown:= DOWNWARD7;

step
check keyState=KEYINIGNITIONONPOSITION;
check pitmanArmUpDown_Buff= NEUTRAL_UD;
check pitmanArmUpDown_RunnReq= DOWNWARD7;
check blinkRight = 0
	 blinkRightPulseRatio = NOPULSE;
check blinkLeft != 0
	 blinkRightLeft != NOPULSE;